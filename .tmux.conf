set-option -g alternate-screen on

set-option -sa terminal-overrides ',xterm-256color:RGB'

# Unbind all the default keybindings, we'll bind the ones we want below
unbind-key -a -T prefix

# The colon command is the escape hatch to do whatever we want that doesn't
# have a key binding.  Useful if we forget to bind something.
bind-key : command-prompt

bind-key ? list-keys -T prefix

# Change prefix to C-a, like screen
set-option -g prefix C-a

bind-key d detach-client
bind-key w choose-tree -Zw
bind-key z resize-pane -Z
bind-key C-z suspend-client

# Bind keys for creating and navigating windows (similar to screen layouts)
bind-key c new-window -c "#{pane_current_path}"
bind-key -r n next-window
bind-key -r p previous-window

# Similar to 'kill current window and remove region' in screen
bind-key x kill-pane

# Move between panes using Vim movement keys
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Mark current pane
bind-key m select-pane -m

# Swap the current pane with the marked pane
# Works across different windows, and removes the mark
bind-key s swap-pane

# Vim-like key bindings for entering copy mode and pasting
bind-key i copy-mode
bind-key C-v paste-buffer -p

# In copy mode, use 'v' to start marking a region
bind-key -Tcopy-mode-vi v send -X begin-selection

# Use vi (not Emacs) keys for navigating in copypaste mode
set-window-option -g mode-keys vi

# Set terminal (e.g. xterm) title bar
set-option -g set-titles-string "tmux #{session_name}:#{window_index}.#{pane_index} - \"#{pane_current_command}\" #{?session_alerts,[alerts:#{session_alerts}],}"

# Set pane title bar
set-option -g pane-border-status top
set-option -g pane-border-format " #{pane_index} #{pane_current_command} #{?client_prefix,[C-a],}"
set-option -g pane-border-lines double
set-option -g pane-border-style fg=colour240
set-option -g pane-active-border-style fg=colour120

# Set repeat time to 250ms
set-option -g repeat-time 250

# Display tmux messages for 750ms
set-option -g display-time 750

# https://github.com/seebi/tmux-colors-solarized/blob/master/tmuxcolors-256.conf
set-option -g status-style bg=colour235,fg=colour136,default

# default window title colors
set-window-option -g window-status-style fg=white,bg=default
set-window-option -g window-status-format "#[default]#{window_index}#[fg=yellow]#{?window_flags,#{window_flags}, }#[default]#W"

# active window title colors
set-window-option -g window-status-current-style fg=white,bg=default,bright
set-window-option -g window-status-current-format "#[fg=red](#[default]#{window_index}#[fg=yellow]#{?window_flags,#{window_flags}, }#[default]#W#[fg=red])"

# message text
set-option -g message-style bg=colour235,fg=colour166

# pane number display
set-option -g display-panes-active-colour colour33
set-option -g display-panes-colour colour166

set-option -g status-interval 1
set-option -g status-justify centre
set-option -g status-left-length 30
set-option -g status-right-length 140
set-option -g status-left '#[fg=green][tm:#S][#H]#{?client_prefix,[C-a][,[     }'
set-option -g status-right '#[fg=green]][#[fg=red,bg=default]Up #(uptime | cut -f 4-5 -d " " | cut -f 1 -d ",") #[fg=white,bg=default]%a %b %d %k:%M:%S#[fg=green]]'

# Activity monitoring
set-window-option -g monitor-activity on
set-option -g visual-activity on

# auto window rename
set-window-option -g automatic-rename

set-option -g mouse on

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-logging'
set -g @plugin 'tmux-plugins/tmux-pain-control'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'

# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'github_username/plugin_name#branch'
# set -g @plugin 'git@github.com:user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
